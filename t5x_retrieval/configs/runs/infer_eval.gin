from __gin__ import dynamic_registration

import __main__ as train_script
import seqio
from t5x import utils

# Convenience overrides.
EVALUATOR_USE_MEMORY_CACHE = False
EVALUATOR_NUM_EXAMPLES = None  # None means use all examples in the infer_eval dataset.
JSON_WRITE_N_RESULTS = None  # None means write all inferences.

train_script.train:
  infer_eval_dataset_cfg = @infer_eval/utils.DatasetConfig()
  inference_evaluator_cls = @seqio.Evaluator

EVAL_MIXTURE_OR_TASK_NAME = %MIXTURE_OR_TASK_NAME
EVAL_TASK_FEATURE_LENGTHS = %TASK_FEATURE_LENGTHS
EVAL_BATCH_SIZE = %BATCH_SIZE

infer_eval/utils.DatasetConfig:
  mixture_or_task_name = %EVAL_MIXTURE_OR_TASK_NAME
  task_feature_lengths = %EVAL_TASK_FEATURE_LENGTHS
  split = 'validation'
  batch_size = %EVAL_BATCH_SIZE
  shuffle = False
  seed = 42
  use_cached = %USE_CACHED_TASKS
  pack = False
  module = %MIXTURE_OR_TASK_MODULE

seqio.Evaluator:
  logger_cls = [@seqio.PyLoggingLogger, @seqio.TensorBoardLogger, @seqio.JSONLogger]
  num_examples = %EVALUATOR_NUM_EXAMPLES
  use_memory_cache = %EVALUATOR_USE_MEMORY_CACHE

seqio.JSONLogger:
  write_n_results = %JSON_WRITE_N_RESULTS
